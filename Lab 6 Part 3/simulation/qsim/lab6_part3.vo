// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"

// DATE "10/23/2018 10:15:06"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module part3 (
	CLOCK_50,
	SW,
	KEY,
	LEDR);
input 	CLOCK_50;
input 	[9:0] SW;
input 	[3:0] KEY;
output 	[0:0] LEDR;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \SW[3]~input_o ;
wire \SW[4]~input_o ;
wire \SW[5]~input_o ;
wire \SW[6]~input_o ;
wire \SW[7]~input_o ;
wire \SW[8]~input_o ;
wire \SW[9]~input_o ;
wire \KEY[2]~input_o ;
wire \KEY[3]~input_o ;
wire \LEDR[0]~output_o ;
wire \CLOCK_50~input_o ;
wire \KEY[0]~input_o ;
wire \f0|z[0]~0_combout ;
wire \f0|f~0_combout ;
wire \f0|f~q ;
wire \SW[2]~input_o ;
wire \SW[0]~input_o ;
wire \SW[1]~input_o ;
wire \KEY[1]~input_o ;
wire \f4|y.A~0_combout ;
wire \f4|y.A~q ;
wire \f2|Q~0_combout ;
wire \f4|Y.B~0_combout ;
wire \f4|y.B~q ;
wire \f4|y.E~q ;
wire \f4|y.F~q ;
wire \f3|Q[0]~0_combout ;
wire \f3|Q[1]~2_combout ;
wire \f3|Q[2]~1_combout ;
wire \f3|Equal8~0_combout ;
wire \f3|Equal8~1_combout ;
wire \f4|Selector0~0_combout ;
wire \f4|y.C~q ;
wire \f4|Y~0_combout ;
wire \f4|y.G~q ;
wire \f4|Selector1~0_combout ;
wire \f4|y.D~q ;
wire [0:0] \f4|LEDR ;
wire [0:3] \f2|Q ;
wire [2:0] \f3|Q ;
wire [0:0] \f0|z ;


cyclonev_io_obuf \LEDR[0]~output (
	.i(\f4|LEDR [0]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[0]~output .bus_hold = "false";
defparam \LEDR[0]~output .open_drain_output = "false";
defparam \LEDR[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \CLOCK_50~input (
	.i(CLOCK_50),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\CLOCK_50~input_o ));
// synopsys translate_off
defparam \CLOCK_50~input .bus_hold = "false";
defparam \CLOCK_50~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \KEY[0]~input (
	.i(KEY[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\KEY[0]~input_o ));
// synopsys translate_off
defparam \KEY[0]~input .bus_hold = "false";
defparam \KEY[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \f0|z[0]~0 (
// Equation(s):
// \f0|z[0]~0_combout  = !\f0|z [0]

	.dataa(!\f0|z [0]),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f0|z[0]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f0|z[0]~0 .extended_lut = "off";
defparam \f0|z[0]~0 .lut_mask = 64'hAAAAAAAAAAAAAAAA;
defparam \f0|z[0]~0 .shared_arith = "off";
// synopsys translate_on

dffeas \f0|z[0] (
	.clk(\CLOCK_50~input_o ),
	.d(\f0|z[0]~0_combout ),
	.asdata(vcc),
	.clrn(\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f0|z [0]),
	.prn(vcc));
// synopsys translate_off
defparam \f0|z[0] .is_wysiwyg = "true";
defparam \f0|z[0] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \f0|f~0 (
// Equation(s):
// \f0|f~0_combout  = (!\KEY[0]~input_o  & (\f0|f~q )) # (\KEY[0]~input_o  & ((\f0|z [0])))

	.dataa(!\f0|f~q ),
	.datab(!\KEY[0]~input_o ),
	.datac(!\f0|z [0]),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f0|f~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f0|f~0 .extended_lut = "off";
defparam \f0|f~0 .lut_mask = 64'h4747474747474747;
defparam \f0|f~0 .shared_arith = "off";
// synopsys translate_on

dffeas \f0|f (
	.clk(\CLOCK_50~input_o ),
	.d(\f0|f~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f0|f~q ),
	.prn(vcc));
// synopsys translate_off
defparam \f0|f .is_wysiwyg = "true";
defparam \f0|f .power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \SW[2]~input (
	.i(SW[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[2]~input_o ));
// synopsys translate_off
defparam \SW[2]~input .bus_hold = "false";
defparam \SW[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[0]~input (
	.i(SW[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[0]~input_o ));
// synopsys translate_off
defparam \SW[0]~input .bus_hold = "false";
defparam \SW[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[1]~input (
	.i(SW[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[1]~input_o ));
// synopsys translate_off
defparam \SW[1]~input .bus_hold = "false";
defparam \SW[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \KEY[1]~input (
	.i(KEY[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\KEY[1]~input_o ));
// synopsys translate_off
defparam \KEY[1]~input .bus_hold = "false";
defparam \KEY[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \f4|y.A~0 (
// Equation(s):
// \f4|y.A~0_combout  = (!\KEY[1]~input_o ) # (\f4|y.A~q )

	.dataa(!\f4|y.A~q ),
	.datab(!\KEY[1]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f4|y.A~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f4|y.A~0 .extended_lut = "off";
defparam \f4|y.A~0 .lut_mask = 64'hDDDDDDDDDDDDDDDD;
defparam \f4|y.A~0 .shared_arith = "off";
// synopsys translate_on

dffeas \f4|y.A (
	.clk(\f0|f~q ),
	.d(\f4|y.A~0_combout ),
	.asdata(vcc),
	.clrn(\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f4|y.A~q ),
	.prn(vcc));
// synopsys translate_off
defparam \f4|y.A .is_wysiwyg = "true";
defparam \f4|y.A .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \f2|Q~0 (
// Equation(s):
// \f2|Q~0_combout  = (\f4|y.A~q  & ((!\SW[0]~input_o  & ((\SW[1]~input_o ))) # (\SW[0]~input_o  & (!\SW[2]~input_o ))))

	.dataa(!\SW[2]~input_o ),
	.datab(!\SW[0]~input_o ),
	.datac(!\SW[1]~input_o ),
	.datad(!\f4|y.A~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f2|Q~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f2|Q~0 .extended_lut = "off";
defparam \f2|Q~0 .lut_mask = 64'h002E002E002E002E;
defparam \f2|Q~0 .shared_arith = "off";
// synopsys translate_on

dffeas \f2|Q[3] (
	.clk(\f0|f~q ),
	.d(\f2|Q~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f2|Q [3]),
	.prn(vcc));
// synopsys translate_off
defparam \f2|Q[3] .is_wysiwyg = "true";
defparam \f2|Q[3] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \f4|Y.B~0 (
// Equation(s):
// \f4|Y.B~0_combout  = (!\f4|y.A~q  & !\KEY[1]~input_o )

	.dataa(!\f4|y.A~q ),
	.datab(!\KEY[1]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f4|Y.B~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f4|Y.B~0 .extended_lut = "off";
defparam \f4|Y.B~0 .lut_mask = 64'h8888888888888888;
defparam \f4|Y.B~0 .shared_arith = "off";
// synopsys translate_on

dffeas \f4|y.B (
	.clk(\f0|f~q ),
	.d(\f4|Y.B~0_combout ),
	.asdata(vcc),
	.clrn(\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f4|y.B~q ),
	.prn(vcc));
// synopsys translate_off
defparam \f4|y.B .is_wysiwyg = "true";
defparam \f4|y.B .power_up = "low";
// synopsys translate_on

dffeas \f4|y.E (
	.clk(\f0|f~q ),
	.d(\f4|y.D~q ),
	.asdata(vcc),
	.clrn(\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f4|y.E~q ),
	.prn(vcc));
// synopsys translate_off
defparam \f4|y.E .is_wysiwyg = "true";
defparam \f4|y.E .power_up = "low";
// synopsys translate_on

dffeas \f4|y.F (
	.clk(\f0|f~q ),
	.d(\f4|y.E~q ),
	.asdata(vcc),
	.clrn(\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f4|y.F~q ),
	.prn(vcc));
// synopsys translate_off
defparam \f4|y.F .is_wysiwyg = "true";
defparam \f4|y.F .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \f3|Q[0]~0 (
// Equation(s):
// \f3|Q[0]~0_combout  = !\f3|Q [0] $ (((!\f4|y.A~q ) # ((!\f4|y.C~q  & !\f4|y.F~q ))))

	.dataa(!\f4|y.C~q ),
	.datab(!\f4|y.F~q ),
	.datac(!\f3|Q [0]),
	.datad(!\f4|y.A~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f3|Q[0]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f3|Q[0]~0 .extended_lut = "off";
defparam \f3|Q[0]~0 .lut_mask = 64'h0F780F780F780F78;
defparam \f3|Q[0]~0 .shared_arith = "off";
// synopsys translate_on

dffeas \f3|Q[0] (
	.clk(\f0|f~q ),
	.d(\f3|Q[0]~0_combout ),
	.asdata(vcc),
	.clrn(\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f3|Q [0]),
	.prn(vcc));
// synopsys translate_off
defparam \f3|Q[0] .is_wysiwyg = "true";
defparam \f3|Q[0] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \f3|Q[1]~2 (
// Equation(s):
// \f3|Q[1]~2_combout  = ( \f4|y.A~q  & ( !\f3|Q [1] $ (((!\f3|Q [0]) # ((!\f4|y.C~q  & !\f4|y.F~q )))) ) ) # ( !\f4|y.A~q  & ( \f3|Q [1] ) )

	.dataa(!\f4|y.C~q ),
	.datab(!\f4|y.F~q ),
	.datac(!\f3|Q [0]),
	.datad(!\f3|Q [1]),
	.datae(!\f4|y.A~q ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f3|Q[1]~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f3|Q[1]~2 .extended_lut = "off";
defparam \f3|Q[1]~2 .lut_mask = 64'h00FF07F800FF07F8;
defparam \f3|Q[1]~2 .shared_arith = "off";
// synopsys translate_on

dffeas \f3|Q[1] (
	.clk(\f0|f~q ),
	.d(\f3|Q[1]~2_combout ),
	.asdata(vcc),
	.clrn(\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f3|Q [1]),
	.prn(vcc));
// synopsys translate_off
defparam \f3|Q[1] .is_wysiwyg = "true";
defparam \f3|Q[1] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \f3|Q[2]~1 (
// Equation(s):
// \f3|Q[2]~1_combout  = ( \f3|Q [1] & ( \f4|y.A~q  & ( !\f3|Q [2] $ (((!\f3|Q [0]) # ((!\f4|y.C~q  & !\f4|y.F~q )))) ) ) ) # ( !\f3|Q [1] & ( \f4|y.A~q  & ( \f3|Q [2] ) ) ) # ( \f3|Q [1] & ( !\f4|y.A~q  & ( \f3|Q [2] ) ) ) # ( !\f3|Q [1] & ( !\f4|y.A~q  & ( 
// \f3|Q [2] ) ) )

	.dataa(!\f4|y.C~q ),
	.datab(!\f4|y.F~q ),
	.datac(!\f3|Q [0]),
	.datad(!\f3|Q [2]),
	.datae(!\f3|Q [1]),
	.dataf(!\f4|y.A~q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f3|Q[2]~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f3|Q[2]~1 .extended_lut = "off";
defparam \f3|Q[2]~1 .lut_mask = 64'h00FF00FF00FF07F8;
defparam \f3|Q[2]~1 .shared_arith = "off";
// synopsys translate_on

dffeas \f3|Q[2] (
	.clk(\f0|f~q ),
	.d(\f3|Q[2]~1_combout ),
	.asdata(vcc),
	.clrn(\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f3|Q [2]),
	.prn(vcc));
// synopsys translate_off
defparam \f3|Q[2] .is_wysiwyg = "true";
defparam \f3|Q[2] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \f3|Equal8~0 (
// Equation(s):
// \f3|Equal8~0_combout  = ( \SW[0]~input_o  & ( \SW[1]~input_o  & ( (\SW[2]~input_o  & (!\f3|Q [0] & (!\f3|Q [2] & \f3|Q [1]))) ) ) ) # ( !\SW[0]~input_o  & ( \SW[1]~input_o  & ( (\SW[2]~input_o  & (\f3|Q [0] & (!\f3|Q [2] & \f3|Q [1]))) ) ) ) # ( 
// \SW[0]~input_o  & ( !\SW[1]~input_o  & ( (\SW[2]~input_o  & (\f3|Q [0] & (!\f3|Q [2] & !\f3|Q [1]))) ) ) ) # ( !\SW[0]~input_o  & ( !\SW[1]~input_o  & ( (\SW[2]~input_o  & (!\f3|Q [0] & (!\f3|Q [2] & \f3|Q [1]))) ) ) )

	.dataa(!\SW[2]~input_o ),
	.datab(!\f3|Q [0]),
	.datac(!\f3|Q [2]),
	.datad(!\f3|Q [1]),
	.datae(!\SW[0]~input_o ),
	.dataf(!\SW[1]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f3|Equal8~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f3|Equal8~0 .extended_lut = "off";
defparam \f3|Equal8~0 .lut_mask = 64'h0040100000100040;
defparam \f3|Equal8~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \f3|Equal8~1 (
// Equation(s):
// \f3|Equal8~1_combout  = (!\SW[2]~input_o  & (!\f3|Q [0] & (\f3|Q [2] & !\f3|Q [1])))

	.dataa(!\SW[2]~input_o ),
	.datab(!\f3|Q [0]),
	.datac(!\f3|Q [2]),
	.datad(!\f3|Q [1]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f3|Equal8~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f3|Equal8~1 .extended_lut = "off";
defparam \f3|Equal8~1 .lut_mask = 64'h0800080008000800;
defparam \f3|Equal8~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \f4|Selector0~0 (
// Equation(s):
// \f4|Selector0~0_combout  = ( !\f3|Equal8~1_combout  & ( (!\f2|Q [3] & (!\f3|Equal8~0_combout  & ((\f4|y.G~q ) # (\f4|y.B~q )))) ) )

	.dataa(!\f2|Q [3]),
	.datab(!\f4|y.B~q ),
	.datac(!\f4|y.G~q ),
	.datad(!\f3|Equal8~0_combout ),
	.datae(!\f3|Equal8~1_combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f4|Selector0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f4|Selector0~0 .extended_lut = "off";
defparam \f4|Selector0~0 .lut_mask = 64'h2A0000002A000000;
defparam \f4|Selector0~0 .shared_arith = "off";
// synopsys translate_on

dffeas \f4|y.C (
	.clk(\f0|f~q ),
	.d(\f4|Selector0~0_combout ),
	.asdata(vcc),
	.clrn(\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f4|y.C~q ),
	.prn(vcc));
// synopsys translate_off
defparam \f4|y.C .is_wysiwyg = "true";
defparam \f4|y.C .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \f4|Y~0 (
// Equation(s):
// \f4|Y~0_combout  = (\f4|y.F~q ) # (\f4|y.C~q )

	.dataa(!\f4|y.C~q ),
	.datab(!\f4|y.F~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f4|Y~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f4|Y~0 .extended_lut = "off";
defparam \f4|Y~0 .lut_mask = 64'h7777777777777777;
defparam \f4|Y~0 .shared_arith = "off";
// synopsys translate_on

dffeas \f4|y.G (
	.clk(\f0|f~q ),
	.d(\f4|Y~0_combout ),
	.asdata(vcc),
	.clrn(\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f4|y.G~q ),
	.prn(vcc));
// synopsys translate_off
defparam \f4|y.G .is_wysiwyg = "true";
defparam \f4|y.G .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \f4|Selector1~0 (
// Equation(s):
// \f4|Selector1~0_combout  = ( !\f3|Equal8~1_combout  & ( (\f2|Q [3] & (!\f3|Equal8~0_combout  & ((\f4|y.G~q ) # (\f4|y.B~q )))) ) )

	.dataa(!\f2|Q [3]),
	.datab(!\f4|y.B~q ),
	.datac(!\f4|y.G~q ),
	.datad(!\f3|Equal8~0_combout ),
	.datae(!\f3|Equal8~1_combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f4|Selector1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f4|Selector1~0 .extended_lut = "off";
defparam \f4|Selector1~0 .lut_mask = 64'h1500000015000000;
defparam \f4|Selector1~0 .shared_arith = "off";
// synopsys translate_on

dffeas \f4|y.D (
	.clk(\f0|f~q ),
	.d(\f4|Selector1~0_combout ),
	.asdata(vcc),
	.clrn(\KEY[0]~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\f4|y.D~q ),
	.prn(vcc));
// synopsys translate_off
defparam \f4|y.D .is_wysiwyg = "true";
defparam \f4|y.D .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \f4|LEDR[0] (
// Equation(s):
// \f4|LEDR [0] = (((\f4|y.F~q ) # (\f4|y.C~q )) # (\f4|y.E~q )) # (\f4|y.D~q )

	.dataa(!\f4|y.D~q ),
	.datab(!\f4|y.E~q ),
	.datac(!\f4|y.C~q ),
	.datad(!\f4|y.F~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\f4|LEDR [0]),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \f4|LEDR[0] .extended_lut = "off";
defparam \f4|LEDR[0] .lut_mask = 64'h7FFF7FFF7FFF7FFF;
defparam \f4|LEDR[0] .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \SW[3]~input (
	.i(SW[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[3]~input_o ));
// synopsys translate_off
defparam \SW[3]~input .bus_hold = "false";
defparam \SW[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[4]~input (
	.i(SW[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[4]~input_o ));
// synopsys translate_off
defparam \SW[4]~input .bus_hold = "false";
defparam \SW[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[5]~input (
	.i(SW[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[5]~input_o ));
// synopsys translate_off
defparam \SW[5]~input .bus_hold = "false";
defparam \SW[5]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[6]~input (
	.i(SW[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[6]~input_o ));
// synopsys translate_off
defparam \SW[6]~input .bus_hold = "false";
defparam \SW[6]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[7]~input (
	.i(SW[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[7]~input_o ));
// synopsys translate_off
defparam \SW[7]~input .bus_hold = "false";
defparam \SW[7]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[8]~input (
	.i(SW[8]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[8]~input_o ));
// synopsys translate_off
defparam \SW[8]~input .bus_hold = "false";
defparam \SW[8]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \SW[9]~input (
	.i(SW[9]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[9]~input_o ));
// synopsys translate_off
defparam \SW[9]~input .bus_hold = "false";
defparam \SW[9]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \KEY[2]~input (
	.i(KEY[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\KEY[2]~input_o ));
// synopsys translate_off
defparam \KEY[2]~input .bus_hold = "false";
defparam \KEY[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \KEY[3]~input (
	.i(KEY[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\KEY[3]~input_o ));
// synopsys translate_off
defparam \KEY[3]~input .bus_hold = "false";
defparam \KEY[3]~input .simulate_z_as = "z";
// synopsys translate_on

assign LEDR[0] = \LEDR[0]~output_o ;

endmodule
